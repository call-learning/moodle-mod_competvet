define("mod_competvet/local/grading/components/certification_grading",["../../competstate","core/notification","core/templates","../../new-repository"],(function(_competstate,_notification,_templates,_newRepository){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * The grading component of the Evaluations tab.
   *
   * @module     mod_competvet/local/grading/components/evaluations_grading
   * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */_competstate=_interopRequireDefault(_competstate),_notification=_interopRequireDefault(_notification),_templates=_interopRequireDefault(_templates),_newRepository=_interopRequireDefault(_newRepository);const gradingApp=document.querySelector('[data-region="grading-app"]');(()=>{const templateName="certification-grading",region=gradingApp.querySelector('[data-region="'.concat(templateName,'"]')),template="mod_competvet/grading/components/".concat(templateName);_competstate.default.subscribe(templateName,(context=>{void 0!==context[templateName]&&_templates.default.render(template,context).then((html=>{region.innerHTML=html,formEvents()})).catch(_notification.default.exception)}))})();const formCalculation=()=>{const{"certification-grading":grade,user:user}=_competstate.default.getData(),grading=grade.grading;grading.userid=user.id;const form=document.querySelector('[data-region="certification-grading"]'),formData=new FormData(form),formObject=Object.fromEntries(formData);grading.comment=formObject.comment,grading.subgrade="2"==formObject.evaluatordecision?1:0,grading.evaloptions.forEach((option=>{option.key==Number(formObject.evaluatordecision)?option.selected=!0:option.selected=!1}));return{grading:grading}},formEvents=()=>{const form=document.querySelector('[data-region="certification-grading"]');form.dataset.events||(form.addEventListener("change",(async e=>{e.preventDefault();const context=formCalculation();_competstate.default.setValue("certification-grading",context)})),form.addEventListener("submit",(async e=>{e.preventDefault();const context=formCalculation(),user=_competstate.default.getValue("user"),planning=_competstate.default.getValue("planning"),args={userid:user.id,planningid:planning.id,formname:"certification-grading",json:JSON.stringify(context.grading)},result=await _newRepository.default.saveFormData(args);context.isvalid=result.result,context.isinvalid=!result.result,_competstate.default.setValue("certification-grading",context);const subgradeArgs={studentid:user.id,planningid:planning.id,grade:context.grading.subgrade,type:2};await _newRepository.default.setSubGrade(subgradeArgs);const customEvent=new CustomEvent("setSuggestedGrade",{});gradingApp.dispatchEvent(customEvent)})),form.dataset.events=!0)};formEvents()}));

//# sourceMappingURL=certification_grading.min.js.map