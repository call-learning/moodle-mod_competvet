{"version":3,"file":"list_grading.min.js","sources":["../../../../src/local/grading/components/list_grading.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module grading_app_usernavigation\n *\n * @module     mod_competvet/local/grading/components/list_grading\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\nimport CompetState from '../../competstate';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport Repository from '../../new-repository';\n\nconst gradingApp = document.querySelector('[data-region=\"grading-app\"]');\n\nconst LIST_GRADE = 3;\n\n/**\n * Define the user navigation.\n */\nconst stateTemplate = () => {\n    const templateName = 'list-grading';\n    const region = gradingApp.querySelector(`[data-region=\"${templateName}\"]`);\n    const template = `mod_competvet/grading/components/${templateName}`;\n    const regionRenderer = (context) => {\n        if (context[templateName] === undefined) {\n            return;\n        }\n        // TODO, make the grid selection dynamic.\n        Templates.render(template, context).then((html) => {\n            region.innerHTML = html;\n            formEvents();\n            return;\n        }).catch(Notification.exception);\n    };\n    CompetState.subscribe(templateName, regionRenderer);\n};\n\nconst formCalculation = () => {\n    const form = document.querySelector('[data-region=\"list-grading\"]');\n    const formData = new FormData(form);\n    const formObject = Object.fromEntries(formData);\n    const {'list-grading': listGrading} = CompetState.getData();\n    const grading = listGrading.grading;\n    grading.subgrade = 0;\n    grading.criteria.forEach((criterion) => {\n        const criterionId = criterion.criterionid;\n        criterion.grade = formObject[`criterion-${criterionId}`];\n        criterion.comment = formObject[`criterion-${criterionId}-comment`];\n        criterion.options.forEach((option) => {\n            if (option.grade == criterion.grade) {\n                option.selected = true;\n                grading.subgrade += option.grade;\n            } else {\n                option.selected = false;\n            }\n        });\n    });\n    const context = {\n        grading: grading\n    };\n    return context;\n};\n\nconst formEvents = () => {\n    const form = document.querySelector('[data-region=\"list-grading\"]');\n    if (form.dataset.events) {\n        return;\n    }\n    form.addEventListener('submit', async(e) => {\n        e.preventDefault();\n        const context = formCalculation();\n        const user = CompetState.getValue('user');\n        const planning = CompetState.getValue('planning');\n\n        const args = {\n            userid: user.id,\n            planningid: planning.id,\n            formname: 'list-grading',\n            json: JSON.stringify(context.grading)\n        };\n        const result = await Repository.saveFormData(args);\n        context.isvalid = result.result;\n        context.isinvalid = !result.result;\n        CompetState.setValue('list-grading', context);\n\n        // Now set the sub grade that will be used for the suggested grade.\n        const subgradeArgs = {\n            studentid: user.id,\n            planningid: planning.id,\n            grade: context.grading.subgrade,\n            type: LIST_GRADE\n        };\n        await Repository.setSubGrade(subgradeArgs);\n\n        const customEvent = new CustomEvent('setSuggestedGrade', {});\n        gradingApp.dispatchEvent(customEvent);\n\n    });\n    form.dataset.events = true;\n};\n\nstateTemplate();\n"],"names":["gradingApp","document","querySelector","formEvents","form","dataset","events","addEventListener","async","e","preventDefault","context","formData","FormData","formObject","Object","fromEntries","listGrading","CompetState","getData","grading","subgrade","criteria","forEach","criterion","criterionId","criterionid","grade","comment","options","option","selected","formCalculation","user","getValue","planning","args","userid","id","planningid","formname","json","JSON","stringify","result","Repository","saveFormData","isvalid","isinvalid","setValue","subgradeArgs","studentid","type","setSubGrade","customEvent","CustomEvent","dispatchEvent","region","template","subscribe","undefined","render","then","html","innerHTML","catch","Notification","exception","stateTemplate"],"mappings":";;;;;;;qNA6BMA,WAAaC,SAASC,cAAc,+BAmDpCC,WAAa,WACTC,KAAOH,SAASC,cAAc,gCAChCE,KAAKC,QAAQC,SAGjBF,KAAKG,iBAAiB,UAAUC,MAAAA,IAC5BC,EAAEC,uBACIC,QAjCU,YACdP,KAAOH,SAASC,cAAc,gCAC9BU,SAAW,IAAIC,SAAST,MACxBU,WAAaC,OAAOC,YAAYJ,0BACfK,aAAeC,qBAAYC,UAC5CC,QAAUH,YAAYG,eAC5BA,QAAQC,SAAW,EACnBD,QAAQE,SAASC,SAASC,kBAChBC,YAAcD,UAAUE,YAC9BF,UAAUG,MAAQb,+BAAwBW,cAC1CD,UAAUI,QAAUd,+BAAwBW,yBAC5CD,UAAUK,QAAQN,SAASO,SACnBA,OAAOH,OAASH,UAAUG,OAC1BG,OAAOC,UAAW,EAClBX,QAAQC,UAAYS,OAAOH,OAE3BG,OAAOC,UAAW,QAId,CACZX,QAASA,UAYOY,GACVC,KAAOf,qBAAYgB,SAAS,QAC5BC,SAAWjB,qBAAYgB,SAAS,YAEhCE,KAAO,CACTC,OAAQJ,KAAKK,GACbC,WAAYJ,SAASG,GACrBE,SAAU,eACVC,KAAMC,KAAKC,UAAUhC,QAAQS,UAE3BwB,aAAeC,uBAAWC,aAAaV,MAC7CzB,QAAQoC,QAAUH,OAAOA,OACzBjC,QAAQqC,WAAaJ,OAAOA,4BAChBK,SAAS,eAAgBtC,eAG/BuC,aAAe,CACjBC,UAAWlB,KAAKK,GAChBC,WAAYJ,SAASG,GACrBX,MAAOhB,QAAQS,QAAQC,SACvB+B,KA5EO,SA8ELP,uBAAWQ,YAAYH,oBAEvBI,YAAc,IAAIC,YAAY,oBAAqB,IACzDvD,WAAWwD,cAAcF,gBAG7BlD,KAAKC,QAAQC,QAAS,IA/EJ,YAEZmD,OAASzD,WAAWE,sCADL,sBAEfwD,oDAFe,qCAcTC,UAdS,gBAGGhD,eACUiD,IAA1BjD,QAJa,oCAQPkD,OAAOH,SAAU/C,SAASmD,MAAMC,OACtCN,OAAOO,UAAYD,KACnB5D,gBAED8D,MAAMC,sBAAaC,eAqE9BC"}