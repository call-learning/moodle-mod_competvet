define("mod_competvet/local/grading/components/list_grading",["../../competstate","core/notification","core/templates","../../new-repository"],(function(_competstate,_notification,_templates,_newRepository){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * TODO describe module grading_app_usernavigation
   *
   * @module     mod_competvet/local/grading/components/list_grading
   * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */_competstate=_interopRequireDefault(_competstate),_notification=_interopRequireDefault(_notification),_templates=_interopRequireDefault(_templates),_newRepository=_interopRequireDefault(_newRepository);const gradingApp=document.querySelector('[data-region="grading-app"]'),formEvents=()=>{const form=document.querySelector('[data-region="list-grading"]');form.dataset.events||(form.addEventListener("submit",(async e=>{e.preventDefault();const context=(()=>{const form=document.querySelector('[data-region="list-grading"]'),formData=new FormData(form),formObject=Object.fromEntries(formData),{"list-grading":listGrading}=_competstate.default.getData(),grading=listGrading.grading;return grading.subgrade=0,grading.criteria.forEach((criterion=>{const criterionId=criterion.criterionid;criterion.grade=formObject["criterion-".concat(criterionId)],criterion.comment=formObject["criterion-".concat(criterionId,"-comment")],criterion.options.forEach((option=>{option.grade==criterion.grade?(option.selected=!0,grading.subgrade+=option.grade):option.selected=!1}))})),{grading:grading}})(),user=_competstate.default.getValue("user"),planning=_competstate.default.getValue("planning"),args={userid:user.id,planningid:planning.id,formname:"list-grading",json:JSON.stringify(context.grading)},result=await _newRepository.default.saveFormData(args);context.isvalid=result.result,context.isinvalid=!result.result,_competstate.default.setValue("list-grading",context);const subgradeArgs={studentid:user.id,planningid:planning.id,grade:context.grading.subgrade,type:3};await _newRepository.default.setSubGrade(subgradeArgs);const customEvent=new CustomEvent("setSuggestedGrade",{});gradingApp.dispatchEvent(customEvent)})),form.dataset.events=!0)};(()=>{const region=gradingApp.querySelector('[data-region="'.concat("list-grading",'"]')),template="mod_competvet/grading/components/".concat("list-grading");_competstate.default.subscribe("list-grading",(context=>{void 0!==context["list-grading"]&&_templates.default.render(template,context).then((html=>{region.innerHTML=html,formEvents()})).catch(_notification.default.exception)}))})()}));

//# sourceMappingURL=list_grading.min.js.map