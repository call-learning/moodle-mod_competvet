{"version":3,"file":"helpers.min.js","sources":["../../src/local/helpers.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Small helper functions for the UI.\n *\n * @module     mod_competvet/local/grading/helpers\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport CompetState from './competstate';\nconst gradingApp = document.querySelector('[data-region=\"grading-app\"]');\nimport {get_string as getString} from 'core/str';\n/**\n * Activate show more / less for comments.\n */\nconst activateShowMoreLess = () => {\n    const comments = gradingApp.querySelectorAll('[data-region=\"commenttext\"]');\n    comments.forEach((comment) => {\n        if (comment.dataset.hasListener) {\n            return;\n        }\n        const showMore = comment.querySelector('[data-action=\"showmore\"]');\n        const showLess = comment.querySelector('[data-action=\"showless\"]');\n        const shortText = comment.querySelector('[data-region=\"shorttext\"]');\n        const fullText = comment.querySelector('[data-region=\"fulltext\"]');\n        if (shortText.innerHTML.length != fullText.innerHTML.length) {\n            showMore.classList.remove('d-none');\n        }\n        showMore.addEventListener('click', (event) => {\n            event.preventDefault();\n            shortText.classList.add('d-none');\n            fullText.classList.remove('d-none');\n            showMore.classList.add('d-none');\n            showLess.classList.remove('d-none');\n        });\n        showLess.addEventListener('click', (event) => {\n            event.preventDefault();\n            shortText.classList.remove('d-none');\n            fullText.classList.add('d-none');\n            showMore.classList.remove('d-none');\n            showLess.classList.add('d-none');\n        });\n        showMore.dataset.hasListener = true;\n    });\n};\n\n/**\n * Add loading icon to submit button.\n */\nconst submitLoading = () => {\n    gradingApp.addEventListener('click', async(e) => {\n        if (!e.target.matches('button[type=\"submit\"]')) {\n            return;\n        }\n        const submit = e.target;\n        submit.classList.add('disabled');\n        submit.dataset.originalText = submit.innerHTML;\n        const loadingIcon = '<span class=\"spinner-border spinner-border-sm mr-1\" role=\"status\" aria-hidden=\"true\"></span>';\n        submit.innerHTML = loadingIcon;\n        submit.innerHTML += await getString('processing', 'mod_competvet');\n    });\n};\n\nsubmitLoading();\nactivateShowMoreLess();\n\n/**\n * Get the letter grade for a given grade.\n * @param {float} grade The grade to get the letter for.\n * @return {string} The letter grade.\n */\nconst getLetterGrade = (grade) => {\n    const scale = CompetState.getValue('scale');\n    let letter = '';\n    for (const [key, value] of Object.entries(scale)) {\n        if (grade >= key) {\n            letter = value;\n        }\n    }\n    return letter;\n};\n\nexport {activateShowMoreLess, submitLoading, getLetterGrade};\n\n"],"names":["gradingApp","document","querySelector","activateShowMoreLess","querySelectorAll","forEach","comment","dataset","hasListener","showMore","showLess","shortText","fullText","innerHTML","length","classList","remove","addEventListener","event","preventDefault","add","submitLoading","async","e","target","matches","submit","originalText","grade","scale","CompetState","getValue","letter","key","value","Object","entries"],"mappings":";;;;;;;yNAwBMA,WAAaC,SAASC,cAAc,+BAKpCC,qBAAuB,KACRH,WAAWI,iBAAiB,+BACpCC,SAASC,aACVA,QAAQC,QAAQC,yBAGdC,SAAWH,QAAQJ,cAAc,4BACjCQ,SAAWJ,QAAQJ,cAAc,4BACjCS,UAAYL,QAAQJ,cAAc,6BAClCU,SAAWN,QAAQJ,cAAc,4BACnCS,UAAUE,UAAUC,QAAUF,SAASC,UAAUC,QACjDL,SAASM,UAAUC,OAAO,UAE9BP,SAASQ,iBAAiB,SAAUC,QAChCA,MAAMC,iBACNR,UAAUI,UAAUK,IAAI,UACxBR,SAASG,UAAUC,OAAO,UAC1BP,SAASM,UAAUK,IAAI,UACvBV,SAASK,UAAUC,OAAO,aAE9BN,SAASO,iBAAiB,SAAUC,QAChCA,MAAMC,iBACNR,UAAUI,UAAUC,OAAO,UAC3BJ,SAASG,UAAUK,IAAI,UACvBX,SAASM,UAAUC,OAAO,UAC1BN,SAASK,UAAUK,IAAI,aAE3BX,SAASF,QAAQC,aAAc,+DAOjCa,cAAgB,KAClBrB,WAAWiB,iBAAiB,SAASK,MAAAA,QAC5BC,EAAEC,OAAOC,QAAQ,sCAGhBC,OAASH,EAAEC,OACjBE,OAAOX,UAAUK,IAAI,YACrBM,OAAOnB,QAAQoB,aAAeD,OAAOb,UAErCa,OAAOb,UADa,+FAEpBa,OAAOb,iBAAmB,mBAAU,aAAc,0DAI1DQ,gBACAlB,+CAOwByB,cACdC,MAAQC,qBAAYC,SAAS,aAC/BC,OAAS,OACR,MAAOC,IAAKC,SAAUC,OAAOC,QAAQP,OAClCD,OAASK,MACTD,OAASE,cAGVF"}