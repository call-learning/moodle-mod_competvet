{"version":3,"file":"cert_decl_form.min.js","sources":["../../../src/local/forms/cert_decl_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {genericFormCreate} from \"./generic_form_helper\";\n\n/**\n * Create a Modal Form to add a Certificate Declaration\n *\n * @module     mod_competvet/local/forms/cert_decl_form\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst getDataset = (element) => {\n    const gradingApp = document.querySelector('[data-region=\"grading-app\"]');\n    let data;\n    if (!gradingApp) {\n        // We take the data directly from the element.;\n        data = element.dataset;\n    } else {\n        data = gradingApp.dataset;\n    }\n\n    const datasetLowercase = Object.entries(data).reduce((acc, [key, value]) => {\n        acc[key.toLowerCase()] = value;\n        return acc;\n    }, {});\n    datasetLowercase.criterionid = element.dataset.id;\n    if (element.dataset.declId) {\n        datasetLowercase.declid = element.dataset.declId;\n    }\n    return datasetLowercase;\n};\n\nconst defaultSubmitEventHandler = () => {\n    location.reload();\n};\n\n/**\n * Initialize module\n * @param {string} modulename\n * @param {function} submitEventHandler\n */\nexport const init = (modulename, submitEventHandler = null) => {\n    document.addEventListener('click', function(event) {\n        if (event.target.closest('[data-action=\"cert-decl-student\"]')) {\n            event.preventDefault();\n\n            const button = event.target.closest('[data-action=\"cert-decl-student\"]');\n            const dataset = getDataset(button);\n\n            const modalForm = genericFormCreate(dataset, 'certdecl', modulename, 'cert_decl_student');\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, submitEventHandler ?? defaultSubmitEventHandler);\n\n            // This sets the level field to the value of the range input.\n            modalForm.addEventListener(modalForm.events.LOADED, () => {\n                // Get the value of the range input and set it to the hidden level field.\n                modalForm.modal.getRoot().on('modal:bodyRendered', () => {\n                    const rangeInput = modalForm.modal.getRoot().find('input[type=\"range\"]');\n                    const levelInput = modalForm.modal.getRoot().find('input[name=\"level\"]');\n                    let levelVal = levelInput.val();\n                    if (!levelInput.val()) {\n                        levelVal = 3;\n                        levelInput.val(levelVal);\n                    }\n\n                    const currentLevel = modalForm.modal.getRoot().find('[data-region=\"current-level\"]');\n                    rangeInput.val(levelVal);\n                    currentLevel.text(levelVal);\n                    rangeInput.on('input', () => {\n                        levelInput.val(rangeInput.val());\n                        currentLevel.text(rangeInput.val());\n                    });\n                });\n            });\n            modalForm.show();\n        }\n        if (event.target.closest('[data-action=\"cert-decl-evaluator\"]')) {\n            const button = event.target.closest('[data-action=\"cert-decl-evaluator\"]');\n            const dataset = getDataset(button);\n            const modalForm = genericFormCreate(dataset, 'certdecl', modulename, 'cert_decl_evaluator');\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, submitEventHandler ?? defaultSubmitEventHandler);\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, submitEventHandler ?? defaultSubmitEventHandler);\n\n            // This sets the level field to the value of the range input.\n            modalForm.addEventListener(modalForm.events.LOADED, () => {\n                // Get the value of the range input and set it to the hidden level field.\n                modalForm.modal.getRoot().on('modal:bodyRendered', () => {\n                    const rangeInput = modalForm.modal.getRoot().find('input[type=\"range\"]');\n                    const levelInput = modalForm.modal.getRoot().find('input[name=\"level\"]');\n                    const currentLevel = modalForm.modal.getRoot().find('[data-region=\"current-level\"]');\n                    rangeInput.val(levelInput.val());\n                    currentLevel.text(levelInput.val());\n                });\n            });\n            modalForm.show();\n        }\n    });\n};"],"names":["getDataset","element","gradingApp","document","querySelector","data","dataset","datasetLowercase","Object","entries","reduce","acc","key","value","toLowerCase","criterionid","id","declId","declid","defaultSubmitEventHandler","location","reload","modulename","submitEventHandler","addEventListener","event","target","closest","preventDefault","button","modalForm","events","FORM_SUBMITTED","LOADED","modal","getRoot","on","rangeInput","find","levelInput","levelVal","val","currentLevel","text","show"],"mappings":";;;;;;;;MAyBMA,WAAcC,gBACVC,WAAaC,SAASC,cAAc,mCACtCC,KAKAA,KAJCH,WAIMA,WAAWI,QAFXL,QAAQK,cAKbC,iBAAmBC,OAAOC,QAAQJ,MAAMK,QAAO,CAACC,gBAAMC,IAAKC,mBAC7DF,IAAIC,IAAIE,eAAiBD,MAClBF,MACR,WACHJ,iBAAiBQ,YAAcd,QAAQK,QAAQU,GAC3Cf,QAAQK,QAAQW,SAChBV,iBAAiBW,OAASjB,QAAQK,QAAQW,QAEvCV,kBAGLY,0BAA4B,KAC9BC,SAASC,wBAQO,SAACC,gBAAYC,0EAAqB,KAClDpB,SAASqB,iBAAiB,SAAS,SAASC,UACpCA,MAAMC,OAAOC,QAAQ,qCAAsC,CAC3DF,MAAMG,uBAEAC,OAASJ,MAAMC,OAAOC,QAAQ,qCAC9BrB,QAAUN,WAAW6B,QAErBC,WAAY,0CAAkBxB,QAAS,WAAYgB,WAAY,qBACrEQ,UAAUN,iBAAiBM,UAAUC,OAAOC,eAAgBT,MAAAA,mBAAAA,mBAAsBJ,2BAGlFW,UAAUN,iBAAiBM,UAAUC,OAAOE,QAAQ,KAEhDH,UAAUI,MAAMC,UAAUC,GAAG,sBAAsB,WACzCC,WAAaP,UAAUI,MAAMC,UAAUG,KAAK,uBAC5CC,WAAaT,UAAUI,MAAMC,UAAUG,KAAK,2BAC9CE,SAAWD,WAAWE,MACrBF,WAAWE,QACZD,SAAW,EACXD,WAAWE,IAAID,iBAGbE,aAAeZ,UAAUI,MAAMC,UAAUG,KAAK,iCACpDD,WAAWI,IAAID,UACfE,aAAaC,KAAKH,UAClBH,WAAWD,GAAG,SAAS,KACnBG,WAAWE,IAAIJ,WAAWI,OAC1BC,aAAaC,KAAKN,WAAWI,gBAIzCX,UAAUc,UAEVnB,MAAMC,OAAOC,QAAQ,uCAAwC,OACvDE,OAASJ,MAAMC,OAAOC,QAAQ,uCAC9BrB,QAAUN,WAAW6B,QACrBC,WAAY,0CAAkBxB,QAAS,WAAYgB,WAAY,uBACrEQ,UAAUN,iBAAiBM,UAAUC,OAAOC,eAAgBT,MAAAA,mBAAAA,mBAAsBJ,2BAClFW,UAAUN,iBAAiBM,UAAUC,OAAOC,eAAgBT,MAAAA,mBAAAA,mBAAsBJ,2BAGlFW,UAAUN,iBAAiBM,UAAUC,OAAOE,QAAQ,KAEhDH,UAAUI,MAAMC,UAAUC,GAAG,sBAAsB,WACzCC,WAAaP,UAAUI,MAAMC,UAAUG,KAAK,uBAC5CC,WAAaT,UAAUI,MAAMC,UAAUG,KAAK,uBAC5CI,aAAeZ,UAAUI,MAAMC,UAAUG,KAAK,iCACpDD,WAAWI,IAAIF,WAAWE,OAC1BC,aAAaC,KAAKJ,WAAWE,aAGrCX,UAAUc"}