{"version":3,"file":"cert_decl_form.min.js","sources":["../../../src/local/forms/cert_decl_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Create a Modal Form to add a Certificate Declaration\n *\n * @module     mod_competvet/local/forms/cert_decl_form\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst getDataset = (element) => {\n    const gradingApp = document.querySelector('[data-region=\"grading-app\"]');\n    const data = gradingApp.dataset;\n    const datasetLowercase = Object.entries(data).reduce((acc, [key, value]) => {\n        acc[key.toLowerCase()] = value;\n        return acc;\n    }, {});\n    datasetLowercase.criterionid = element.dataset.id;\n    if (element.dataset.declId) {\n        datasetLowercase.declid = element.dataset.declId;\n    }\n    return datasetLowercase;\n};\n\nconst submitEventHandler = () => {\n    location.reload();\n};\n\nexport const init = () => {\n    document.addEventListener('click', function(event) {\n        if (event.target.closest('[data-action=\"cert-decl-student\"]')) {\n            event.preventDefault();\n\n            const button = event.target.closest('[data-action=\"cert-decl-student\"]');\n            const dataset = getDataset(button);\n\n            const modalForm = new ModalForm({\n                modalConfig: {\n                    title: getString('certdecl', 'mod_competvet'),\n                },\n                formClass: `mod_competvet\\\\form\\\\cert_decl_student`,\n                args: {\n                    ...dataset,\n                    currenturl: window.location.href,\n                },\n                saveButtonText: getString('save'),\n            });\n\n            // This sets the level field to the value of the range input.\n            modalForm.addEventListener(modalForm.events.LOADED, () => {\n                // Get the value of the range input and set it to the hidden level field.\n                modalForm.modal.getRoot().on('modal:bodyRendered', () => {\n                    const rangeInput = modalForm.modal.getRoot().find('input[type=\"range\"]');\n                    const levelInput = modalForm.modal.getRoot().find('input[name=\"level\"]');\n                    const currentLevel = modalForm.modal.getRoot().find('[data-region=\"current-level\"]');\n                    rangeInput.val(levelInput.val());\n                    currentLevel.text(levelInput.val());\n                    rangeInput.on('input', () => {\n                        levelInput.val(rangeInput.val());\n                        currentLevel.text(rangeInput.val());\n                    });\n                });\n            });\n\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, submitEventHandler);\n            modalForm.show();\n        }\n        if (event.target.closest('[data-action=\"cert-decl-evaluator\"]')) {\n            const button = event.target.closest('[data-action=\"cert-decl-evaluator\"]');\n            const dataset = getDataset(button);\n\n            const modalForm = new ModalForm({\n                modalConfig: {\n                    title: getString('certdecl', 'mod_competvet'),\n                },\n                formClass: `mod_competvet\\\\form\\\\cert_decl_evaluator`,\n                args: {\n                    ...dataset,\n                    currenturl: window.location.href,\n                },\n                saveButtonText: getString('save'),\n            });\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, submitEventHandler);\n\n            // This sets the level field to the value of the range input.\n            modalForm.addEventListener(modalForm.events.LOADED, () => {\n                // Get the value of the range input and set it to the hidden level field.\n                modalForm.modal.getRoot().on('modal:bodyRendered', () => {\n                    const rangeInput = modalForm.modal.getRoot().find('input[type=\"range\"]');\n                    const levelInput = modalForm.modal.getRoot().find('input[name=\"level\"]');\n                    const currentLevel = modalForm.modal.getRoot().find('[data-region=\"current-level\"]');\n                    rangeInput.val(levelInput.val());\n                    currentLevel.text(levelInput.val());\n                });\n            });\n            modalForm.show();\n        }\n    });\n};"],"names":["getDataset","element","data","document","querySelector","dataset","datasetLowercase","Object","entries","reduce","acc","key","value","toLowerCase","criterionid","id","declId","declid","submitEventHandler","location","reload","addEventListener","event","target","closest","preventDefault","button","modalForm","ModalForm","modalConfig","title","formClass","args","currenturl","window","href","saveButtonText","events","LOADED","modal","getRoot","on","rangeInput","find","levelInput","currentLevel","val","text","FORM_SUBMITTED","show"],"mappings":";;;;;;;sJA0BMA,WAAcC,gBAEVC,KADaC,SAASC,cAAc,+BAClBC,QAClBC,iBAAmBC,OAAOC,QAAQN,MAAMO,QAAO,CAACC,gBAAMC,IAAKC,mBAC7DF,IAAIC,IAAIE,eAAiBD,MAClBF,MACR,WACHJ,iBAAiBQ,YAAcb,QAAQI,QAAQU,GAC3Cd,QAAQI,QAAQW,SAChBV,iBAAiBW,OAAShB,QAAQI,QAAQW,QAEvCV,kBAGLY,mBAAqB,KACvBC,SAASC,wBAGO,KAChBjB,SAASkB,iBAAiB,SAAS,SAASC,UACpCA,MAAMC,OAAOC,QAAQ,qCAAsC,CAC3DF,MAAMG,uBAEAC,OAASJ,MAAMC,OAAOC,QAAQ,qCAC9BnB,QAAUL,WAAW0B,QAErBC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,mBAAU,WAAY,kBAEjCC,mDACAC,KAAM,IACC3B,QACH4B,WAAYC,OAAOf,SAASgB,MAEhCC,gBAAgB,mBAAU,UAI9BT,UAAUN,iBAAiBM,UAAUU,OAAOC,QAAQ,KAEhDX,UAAUY,MAAMC,UAAUC,GAAG,sBAAsB,WACzCC,WAAaf,UAAUY,MAAMC,UAAUG,KAAK,uBAC5CC,WAAajB,UAAUY,MAAMC,UAAUG,KAAK,uBAC5CE,aAAelB,UAAUY,MAAMC,UAAUG,KAAK,iCACpDD,WAAWI,IAAIF,WAAWE,OAC1BD,aAAaE,KAAKH,WAAWE,OAC7BJ,WAAWD,GAAG,SAAS,KACnBG,WAAWE,IAAIJ,WAAWI,OAC1BD,aAAaE,KAAKL,WAAWI,gBAKzCnB,UAAUN,iBAAiBM,UAAUU,OAAOW,eAAgB9B,oBAC5DS,UAAUsB,UAEV3B,MAAMC,OAAOC,QAAQ,uCAAwC,OACvDE,OAASJ,MAAMC,OAAOC,QAAQ,uCAC9BnB,QAAUL,WAAW0B,QAErBC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,mBAAU,WAAY,kBAEjCC,qDACAC,KAAM,IACC3B,QACH4B,WAAYC,OAAOf,SAASgB,MAEhCC,gBAAgB,mBAAU,UAE9BT,UAAUN,iBAAiBM,UAAUU,OAAOW,eAAgB9B,oBAG5DS,UAAUN,iBAAiBM,UAAUU,OAAOC,QAAQ,KAEhDX,UAAUY,MAAMC,UAAUC,GAAG,sBAAsB,WACzCC,WAAaf,UAAUY,MAAMC,UAAUG,KAAK,uBAC5CC,WAAajB,UAAUY,MAAMC,UAAUG,KAAK,uBAC5CE,aAAelB,UAAUY,MAAMC,UAAUG,KAAK,iCACpDD,WAAWI,IAAIF,WAAWE,OAC1BD,aAAaE,KAAKH,WAAWE,aAGrCnB,UAAUsB"}