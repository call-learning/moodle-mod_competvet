{"version":3,"file":"planning_form_utils.min.js","sources":["../src/planning_form_utils.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module for editing planning presets.\n *\n * @module     mod_competvet/planning_form_utils\n * @copyright  2023 Laurent David <laurent@call-learning.fr>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport {deletePlanning} from \"./repository\";\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport * as reportEvents from 'core_reportbuilder/local/events';\n\nconst selectors = {\n    PLANNING_LIST_ID: 'id_competvetplanningcontainer',\n    EDIT_PLANNING_BUTTON_ACTION: '[data-action=\"editplanning\"]',\n    ADD_PLANNING_BUTTON_ACTION: '[data-action=\"addplanning\"]',\n    DELETE_PLANNING_BUTTON_ACTION: '[data-action=\"deleteplanning\"]',\n};\n\n/**\n * Initialize module\n * @param {Number} reportId The report id.\n */\nexport const init = async(reportId) => {\n    document.addEventListener('click', (event) => {\n        const editPlanningButton = event.target.closest(selectors.EDIT_PLANNING_BUTTON_ACTION);\n        const addPlanningButton = event.target.closest(selectors.ADD_PLANNING_BUTTON_ACTION);\n        const deletePlanningButton = event.target.closest(selectors.DELETE_PLANNING_BUTTON_ACTION);\n        if (!editPlanningButton && !addPlanningButton && !deletePlanningButton) {\n            return;\n        }\n        const button = addPlanningButton || editPlanningButton;\n        event.preventDefault();\n        if (deletePlanningButton) {\n\n            getStrings([\n                {key: 'confirm', component: 'moodle'},\n                {key: 'planning:confirmdelete', component: 'mod_competvet', param: parent.shortname},\n                {key: 'yes', component: 'core'},\n                {key: 'no', component: 'core'}\n            ]).then((strings) => {\n                let confirmTitle, confirmMessage, Yes, No;\n                [confirmTitle, confirmMessage, Yes, No] = strings;\n                Notification.confirm(\n                    confirmTitle,\n                    confirmMessage,\n                    Yes,\n                    No,\n                    () => {\n                        const planningId = deletePlanningButton.dataset?.planningId;\n                        if (planningId) {\n                            deletePlanningandReload(planningId, reportId);\n                        }\n\n                        return true;\n                    }\n                );\n                return;\n            }).catch(Notification.exception);\n        } else {\n            const modalForm = new ModalForm({\n                modalConfig: {\n                    title: editPlanningButton ? getString('edit') : getString('add'),\n                },\n                formClass: 'mod_competvet\\\\form\\\\planning_edit_form',\n                args: {\n                    cmid: button.dataset.cmid,\n                    planningid: button.dataset?.planningId,\n                },\n                saveButtonText: getString('save'),\n            });\n\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\n                if (event.detail.result) {\n                    reloadReport(reportId);\n                } else {\n                    Notification.addNotification({\n                        type: 'error',\n                        message: event.detail.errors.join('<br>')\n                    });\n                }\n            });\n            modalForm.show();\n        }\n    });\n};\n\nconst deletePlanningandReload = async(planningId, reportId) => {\n    try {\n        await deletePlanning(planningId);\n        reloadReport(reportId);\n    } catch (error) {\n        Notification.exception(error);\n    }\n};\n/**\n * Reload report after changes.\n * @param {Number} reportId\n */\nconst reloadReport = (reportId) => {\n    dispatchEvent(\n        reportEvents.tableReload,\n        {},\n        document.querySelector(`.reportbuilder-report[data-report-id='${reportId}']`)\n    );\n};\n"],"names":["selectors","async","document","addEventListener","event","editPlanningButton","target","closest","addPlanningButton","deletePlanningButton","button","preventDefault","key","component","param","parent","shortname","then","strings","confirmTitle","confirmMessage","Yes","No","confirm","planningId","dataset","_deletePlanningButton","deletePlanningandReload","reportId","catch","Notification","exception","modalForm","ModalForm","modalConfig","title","formClass","args","cmid","planningid","_button$dataset","saveButtonText","events","FORM_SUBMITTED","detail","result","reloadReport","addNotification","type","message","errors","join","show","error","reportEvents","tableReload","querySelector"],"mappings":";;;;;;;k2BA8BMA,sCAE2B,+BAF3BA,qCAG0B,8BAH1BA,wCAI6B,+CAOfC,MAAAA,WAChBC,SAASC,iBAAiB,SAAUC,cAC1BC,mBAAqBD,MAAME,OAAOC,QAAQP,uCAC1CQ,kBAAoBJ,MAAME,OAAOC,QAAQP,sCACzCS,qBAAuBL,MAAME,OAAOC,QAAQP,6CAC7CK,qBAAuBG,oBAAsBC,kCAG5CC,OAASF,mBAAqBH,sBACpCD,MAAMO,iBACFF,0CAEW,CACP,CAACG,IAAK,UAAWC,UAAW,UAC5B,CAACD,IAAK,yBAA0BC,UAAW,gBAAiBC,MAAOC,OAAOC,WAC1E,CAACJ,IAAK,MAAOC,UAAW,QACxB,CAACD,IAAK,KAAMC,UAAW,UACxBI,MAAMC,cACDC,aAAcC,eAAgBC,IAAKC,IACtCH,aAAcC,eAAgBC,IAAKC,IAAMJ,8BAC7BK,QACTJ,aACAC,eACAC,IACAC,IACA,qCACUE,yCAAaf,qBAAqBgB,gDAArBC,sBAA8BF,kBAC7CA,YACAG,wBAAwBH,WAAYI,WAGjC,QAIhBC,MAAMC,sBAAaC,eACnB,2BACGC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,MAAO9B,oBAAqB,mBAAU,SAAU,mBAAU,QAE9D+B,UAAW,0CACXC,KAAM,CACFC,KAAM5B,OAAOe,QAAQa,KACrBC,mCAAY7B,OAAOe,0CAAPe,gBAAgBhB,YAEhCiB,gBAAgB,mBAAU,UAG9BT,UAAU7B,iBAAiB6B,UAAUU,OAAOC,gBAAgBvC,QACpDA,MAAMwC,OAAOC,OACbC,aAAalB,gCAEAmB,gBAAgB,CACzBC,KAAM,QACNC,QAAS7C,MAAMwC,OAAOM,OAAOC,KAAK,aAI9CnB,UAAUoB,kBAKhBzB,wBAA0B1B,MAAMuB,WAAYI,sBAEpC,8BAAeJ,YACrBsB,aAAalB,UACf,MAAOyB,6BACQtB,UAAUsB,SAOzBP,aAAgBlB,+CAEd0B,aAAaC,YACb,GACArD,SAASsD,8DAAuD5B"}